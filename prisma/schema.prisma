generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Movie {
  id        Int      @id
  movie     String
  rating    Float
  image     String
  imdb_url  String
  createdAt DateTime @default(now())
  createdBy Int?
  updatedAt DateTime @updatedAt
  updatedBy Int?
}

model User {
  id              Int           @id @default(autoincrement())
  email           String        @unique
  avatarUrl       String?
  createdAt       DateTime      @default(now())
  emailVerifiedAt DateTime?
  fullName        String
  password        String
  rememberToken   String?
  updatedAt       DateTime      @updatedAt
  RoleMap         UserRoleMap[] @relation("UserMap")
}

model Role {
  id         Int           @id @default(autoincrement())
  name       String        @unique
  createdBy  Int?
  updatedBy  Int?
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  RoleDetail RoleDetail?   @relation("RoleDetail")
  RoleMap    UserRoleMap[] @relation("RoleMap")
}

model RoleDetail {
  id        Int      @id @default(autoincrement())
  roleId    Int      @unique
  canRead   Boolean
  canWrite  Boolean
  canDelete Boolean
  canUpdate Boolean
  createdBy Int?
  updatedBy Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      Role     @relation("RoleDetail", fields: [roleId], references: [id])
}

model UserRoleMap {
  id        Int      @id @default(autoincrement())
  userId    Int
  roleId    Int
  createdBy Int?
  updatedBy Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      Role     @relation("RoleMap", fields: [roleId], references: [id])
  user      User     @relation("UserMap", fields: [userId], references: [id])
}
