// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Movie {
  id       Int    @id
  movie    String
  rating   Float
  image    String
  imdb_url String

  createdBy Int?
  updatedBy Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id              Int       @id @default(autoincrement())
  fullName        String
  avatarUrl       String?
  email           String    @unique
  emailVerifiedAt DateTime?
  password        String
  rememberToken   String?

  RoleMap UserRoleMap[] @relation("UserMap")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Role {
  id   Int    @id @default(autoincrement())
  name String @unique

  RoleDetail RoleDetail[]  @relation("RoleDetail")
  RoleMap    UserRoleMap[] @relation("RoleMap")

  createdBy Int?
  updatedBy Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RoleDetail {
  id        Int     @id @default(autoincrement())
  roleId    Int     @unique
  canRead   Boolean
  canWrite  Boolean
  canDelete Boolean
  canUpdate Boolean

  role Role @relation("RoleDetail", fields: [roleId], references: [id])

  createdBy Int?
  updatedBy Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserRoleMap {
  id     Int @id @default(autoincrement())
  userId Int
  roleId Int

  role Role @relation("RoleMap", fields: [roleId], references: [id])
  user User @relation("UserMap", fields: [userId], references: [id])

  createdBy Int?
  updatedBy Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
